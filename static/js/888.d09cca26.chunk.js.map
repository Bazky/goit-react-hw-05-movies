{"version":3,"file":"static/js/888.d09cca26.chunk.js","mappings":"4OAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAoBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CN,EAF1C,4BAJa,mCAIb,oBAIGO,MAAK,SAAAC,GACJJ,EAAQI,EAASC,KAAKN,KACvB,IACAO,OAAM,SAAAC,GACLC,QAAQD,MACN,gEACAA,EAEH,GACJ,GAAE,CAACX,KAGF,4BACE,sDACA,wBACGG,EAAKU,KAAI,SAAAC,GAAK,OACb,yBACE,2BACGA,EAAMC,cACL,gBACEC,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,QAGb,8CAEF,uBAAIJ,EAAMI,WAVLJ,EAAMK,GADF,QAkBtB,C,qIC/CD,EAA4B,gC,SCab,SAASC,IACtB,IAAQpB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOmB,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,OAGjBnB,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CN,EAF1C,oBALa,mCAKb,oBAIGO,MAAK,SAAAC,GACJc,EAAgBd,EAASC,KAC1B,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,qDAA4CA,EAC3D,GACJ,GAAE,CAACX,IAGJ,IAAMyB,EAAaJ,EAAaK,YAAb,0CACoBL,EAAaK,aAChD,GAEJ,OACE,4BACE,mBAAQC,QAAS,kBAAMJ,GAAU,EAAhB,EAAjB,qBACA,iBAAKK,UAAWC,EAAhB,UACGJ,IAAc,gBAAKT,IAAKS,EAAYR,IAAKI,EAAaS,QADzD,KAGE,wBAAKT,EAAaS,SAClB,uBACGT,EAAaU,cAAb,eACSV,EAAaU,aAAaC,MAAM,KAAK,OAEjD,uBACGX,EAAaY,cAAb,sCACwBZ,EAAaY,iBAExC,uBAAIZ,EAAaa,UAAb,gBAAkCb,EAAaa,aACnD,uBACGb,EAAac,QAAb,mBACad,EAAac,OACtBtB,KAAI,SAAAuB,GAAK,OAAIA,EAAMlB,IAAV,IACTmB,KAAK,SAjBd,OAFF,KAwBE,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAatC,EAAb,SAAR,wCAEF,yBACE,SAAC,KAAD,CAAMsC,GAAE,kBAAatC,EAAb,YAAR,6BA9BR,KAmCE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOuC,KAAK,OAAOC,SAAS,SAACzC,EAAA,QAAD,OAC5B,SAAC,KAAD,CAAOwC,KAAK,UAAUC,SAAS,SAACC,EAAA,QAAD,UAEjC,SAAC,KAAD,MAGL,C,oHC9Ec,SAASC,IACtB,IAAQ1C,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOyC,EAAP,KAAgBC,EAAhB,KAiBA,OAbAvC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CN,EAF1C,4BAJa,mCAIb,2BAIGO,MAAK,SAAAC,GACJoC,EAAWpC,EAASC,KAAKoC,QAC1B,IACAnC,OAAM,SAAAC,GACLC,QAAQD,MAAM,8CAAqCA,EACpD,GACJ,GAAE,CAACX,KAGF,4BACE,uCACA,wBACG2C,EAAQ9B,KAAI,SAAAiC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAO3B,GADC,QAS1B,C","sources":["components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const apiKey = '718f2a56dca2d55e08ad2e8b7789586d';\n\n  //   fetch fetch fetch\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n      )\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error(\n          'Błąd podczas pobierania danych o zespole aktorskim:',\n          error\n        );\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Zespół aktorski:</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <div>\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              ) : (\n                <p>Brak zdjęcia</p>\n              )}\n              <p>{actor.name}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Link,\n  useParams,\n  useNavigate,\n  Outlet,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport css from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const apiKey = '718f2a56dca2d55e08ad2e8b7789586d';\n  const navigate = useNavigate();\n\n  //   fetch fetch fetch\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n      )\n      .then(response => {\n        setMovieDetails(response.data);\n      })\n      .catch(error => {\n        console.error('Błąd podczas pobierania danych o filmie:', error);\n      });\n  }, [movieId]);\n\n  // stała sprawdza czy poster_path jest zdefiniowane\n  const posterPath = movieDetails.poster_path\n    ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n    : '';\n\n  return (\n    <div>\n      <button onClick={() => navigate(-1)}>Cofnij</button>\n      <div className={css.container}>\n        {posterPath && <img src={posterPath} alt={movieDetails.title} />}\n        {/* info info info */} {/* info info info */}\n        <h1>{movieDetails.title}</h1>\n        <p>\n          {movieDetails.release_date &&\n            `Rok: ${movieDetails.release_date.split('-')[0]}`}\n        </p>\n        <p>\n          {movieDetails.vote_average &&\n            `Ocena użytkowników: ${movieDetails.vote_average}`}\n        </p>\n        <p>{movieDetails.overview && `Opis: ${movieDetails.overview}`}</p>\n        <p>\n          {movieDetails.genres &&\n            `Gatunek: ${movieDetails.genres\n              .map(genre => genre.name)\n              .join(', ')}`}\n        </p>\n        {/* info info info */} {/* info info info */}\n      </div>\n      {/* nav nav nav */} {/* nav nav nav */}\n      <nav>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Zespół aktorski</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Recenzje</Link>\n          </li>\n        </ul>\n      </nav>\n      {/* nav nav nav */} {/* nav nav nav */}\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n      <Outlet />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Movies() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const apiKey = '718f2a56dca2d55e08ad2e8b7789586d';\n\n  //   fetch fetch fetch\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US&page=1`\n      )\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Błąd podczas pobierania recenzji:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Recenzje:</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","axios","then","response","data","catch","error","console","map","actor","profile_path","src","alt","name","id","MovieDetails","movieDetails","setMovieDetails","navigate","useNavigate","posterPath","poster_path","onClick","className","css","title","release_date","split","vote_average","overview","genres","genre","join","to","path","element","Reviews","Movies","reviews","setReviews","results","review","author","content"],"sourceRoot":""}